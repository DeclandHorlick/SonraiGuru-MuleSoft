<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:context="http://www.springframework.org/schema/context"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<context:property-placeholder location="accesstoken.properties"/>
    <http:listener-config name="HTTP_Listener_Configuration" host="localhost" port="5005" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" protocol="HTTPS" host="apis.bbva.com" port="443" doc:name="HTTP Request Configuration"/>
    <http:listener-config name="HTTP_Listener_Configuration1" host="localhost" port="5001" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Configuration1" protocol="HTTPS" host="apis.bbva.com" port="443" doc:name="HTTP Request Configuration"/>
    <http:listener-config name="HTTP_Listener_Configuration2" host="localhost" port="5002" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Configuration2" protocol="HTTPS" host="apis.bbva.com" port="443" doc:name="HTTP Request Configuration"/>
    <http:listener-config name="HTTP_Listener_Configuration3" host="localhost" port="5000" doc:name="HTTP Listener Configuration"/>
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" database="sonrai" doc:name="MySQL Configuration"/>
    <http:request-config name="HTTP_Request_Configuration3" protocol="HTTPS" host="apis.bbva.com" port="443" doc:name="HTTP Request Configuration"/>
    <flow name="bbvaintegrationFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Request_Configuration" path="/accounts-sbx/v1/me/accounts/ES0182002000000000500000000332067033XXXXXXXXX/transactions" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="jwt ${access.token}"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <logger message="#[message]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="bbvaintegrationFlow1">
        <http:listener config-ref="HTTP_Listener_Configuration1" path="/" doc:name="HTTP"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Request_Configuration1" path="/accounts-sbx/v1/me/accounts" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="jwt ${access.token}"/>
                <http:header headerName="Accept" value="application/json"/>


            </http:request-builder>
        </http:request>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="#[payload.data]" doc:name="Set Payload"/>
        <logger message="#[payload.accounts[2].balance]" level="INFO" doc:name="Logger"/>
        <set-payload value="#[payload.accounts[2].balance]" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="bbvaintegrationFlow2">
        <http:listener config-ref="HTTP_Listener_Configuration2" path="/" doc:name="HTTP"/>
        <custom-transformer class="sonraiguru.SplitDates" doc:name="Java"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Request_Configuration2" path="/accounts-sbx/v1/me/accounts/ES0182002000000000500000000332067033XXXXXXXXX/transactions?dateFrom=#[flowVars.dateFrom]&amp;dateTo=#[flowVars.dateTo]" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="jwt ${access.token}"/>
                <http:header headerName="Accept" value="application/json"/>


            </http:request-builder>
        </http:request>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <set-payload value="#[payload.data.accountTransactions]" doc:name="Set Payload"/>
        <set-variable variableName="outputAmount" value="#[new java.util.ArrayList()]" doc:name="AmountVariable"/>
        <set-variable variableName="outputDate" value="#[new java.util.ArrayList()]" doc:name="Variable"/>
        <foreach collection="#[payload]" doc:name="For Each">
            <logger message="#[payload.amount],#[payload.valueDate]" level="INFO" doc:name="Logger"/>
            <expression-transformer expression="#[flowVars.outputAmount.add(payload.amount)]" doc:name="Expression"></expression-transformer>
        </foreach>
        <foreach collection="#[payload]" doc:name="For Each">
            <expression-transformer expression="#[flowVars.outputDate.add(payload.valueDate)]" doc:name="Expression"/>
            <logger message="#[flowVars.outputDate]" level="INFO" doc:name="Logger"/>
        </foreach>
        <logger message="#[flowVars.outputAmount]" level="INFO" doc:name="Logger"/>
        <logger message="#[flowVars.outputAmount.toString()]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Request_Configuration3" path="/accounts-sbx/v1/me/accounts" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="jwt ${access.token}"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <set-variable variableName="myBalance" value="#[payload.data.accounts[2].balance]" doc:name="Variable"/>
        <set-payload value="#[flowVars.outputAmount + flowVars.outputDate + flowVars.myBalance]" doc:name="Set Payload"/>

        <logger message="[#[payload]" level="INFO" doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="sonraiguruFlow">
        <http:listener config-ref="HTTP_Listener_Configuration3" path="/login" doc:name="HTTP"/>
        <custom-transformer class="sonraiguru.loginProcessor" doc:name="Java"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT user_name FROM users WHERE user_name = #[flowVars.userName] AND password = #[flowVars.passWord];]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[payload != empty] ">
                <set-payload value="successful login" doc:name="Valid-Login"/>
            </when>
            <otherwise>
                <set-payload value="Invalid" doc:name="Invalid-Login"/>
            </otherwise>
        </choice>
        <object-to-string-transformer doc:name="Object to String"/>
    </flow>
</mule>